# Simple localization demo for Coghedrin
LOCALES = {
    'en': {
        'pong': 'Pong!',
        'roll': '{user}, you rolled a {number}',
        'invalid_condition': "Invalid condition. Please choose from 'day', 'night', 'normal', or 'rain'.",
        'balding_percent': '{user} is {percent}% balding. o7',
        'balding_none': "Congratz! You're not balding.",
        'coinflip_specify': "Please specify either 'even' or 'odd'.",
        'coinflip_win': 'You won! ({result})',
        'coinflip_lose': 'You lost. ({result})',
        'coinflip_error': 'Error in coinflip command: {error}',
        'draw': "It's a draw!",
        'user_win': '{user} wins!',
        'opponent_win': '{opponent} wins!',
        'rps_result': '{user} chose {user_choice}. {opponent} chose {opponent_choice}. {result}',
        'slots_jackpot': '{user}, Jackpot! You won!',
        'slots_lose': '{user}, Better luck next time!',
        'secret_dm': 'This is a secret message just for you!',
        'secret_check_dm': '{user}, check your DMs!',
        'secret_dm_fail': "{user}, I couldn't send you a DM. Please check your privacy settings.",
        'roulette_dead': 'You are dead. ({outcome})',
        'roulette_survive': 'You have survived! ({outcome})',
        'roulette_error': 'Error in roulette command: {error}',
        'decide_yes': 'yes',
        'decide_no': 'no',
        'api_url_invalid': 'API URL not configured or invalid. Please set SAMPLE_API in your .env file or provide a valid URL.',
        'api_response': 'API Response: {data}',
        'api_failed': 'Failed to retrieve data from the API. Status: {status}',
        'api_failed_exception': 'API call failed: {error}',
        'unexpected_error': 'Unexpected error: {error}',
        'desc_pinghedrin': 'Responds with Pong! for health check.',
        'desc_roll': 'Roll a random number from 1-100.',
        'desc_dice': 'Roll a random number from 1-6.',
        'desc_rps': 'Play Rock-Paper-Scissors against another player or the bot.',
        'desc_apicall': 'Makes an API call and returns the response.',
        'desc_weather': 'Returns the current weather type for Eastern Americas.',
        'desc_timeofday': 'Returns the current time of day for Eastern Americas.',
        'desc_when': 'Tells how long until the specified condition.',
        'desc_measure': 'Responds randomly with 1 - 14 inches.',
        'desc_secret': 'Sends a secret message to the user who invoked the command.',
        'desc_roulette': 'Play text-based Russian roulette.',
        'desc_slots': 'Play a slot machine game with Discord emojis.',
        'desc_coinflip': 'Play text-based coin flip game.',
        'desc_decide': 'Randomly decide yes or no.',
        'desc_balding': 'Returns a random balding percentage.'
    },
    'es': {
        'pong': '¡Pong!',
        'roll': '{user}, sacaste un {number}',
        'invalid_condition': "Condición inválida. Elija entre 'día', 'noche', 'normal' o 'lluvia'.",
        'balding_percent': '{user} tiene {percent}% de calvicie. o7',
        'balding_none': "¡Felicidades! No tienes calvicie.",
        'coinflip_specify': "Por favor especifica 'par' o 'impar'.",
        'coinflip_win': '¡Ganaste! ({result})',
        'coinflip_lose': 'Perdiste. ({result})',
        'coinflip_error': 'Error en el comando lanzar moneda: {error}',
        'draw': '¡Es un empate!',
        'user_win': '¡{user} gana!',
        'opponent_win': '¡{opponent} gana!',
        'rps_result': '{user} eligió {user_choice}. {opponent} eligió {opponent_choice}. {result}',
        'slots_jackpot': '{user}, ¡Premio mayor! ¡Ganaste!',
        'slots_lose': '{user}, ¡Mejor suerte la próxima vez!',
        'secret_dm': '¡Este es un mensaje secreto solo para ti!',
        'secret_check_dm': '{user}, ¡revisa tus mensajes directos!',
        'secret_dm_fail': '{user}, no pude enviarte un mensaje directo. Por favor revisa tu configuración de privacidad.',
        'roulette_dead': 'Estás muerto. ({outcome})',
        'roulette_survive': '¡Has sobrevivido! ({outcome})',
        'roulette_error': 'Error en el comando ruleta: {error}',
        'decide_yes': 'sí',
        'decide_no': 'no',
        'api_url_invalid': 'La URL de la API no está configurada o es inválida. Configura SAMPLE_API en tu archivo .env o proporciona una URL válida.',
        'api_response': 'Respuesta de la API: {data}',
        'api_failed': 'No se pudo obtener datos de la API. Estado: {status}',
        'api_failed_exception': 'La llamada a la API falló: {error}',
        'unexpected_error': 'Error inesperado: {error}',
        'desc_pinghedrin': '¡Responde con Pong! para comprobar el estado.',
        'desc_roll': 'Lanza un número aleatorio del 1 al 100.',
        'desc_dice': 'Lanza un número aleatorio del 1 al 6.',
        'desc_rps': 'Juega piedra, papel o tijeras contra otro jugador o el bot.',
        'desc_apicall': 'Realiza una llamada a la API y devuelve la respuesta.',
        'desc_weather': 'Devuelve el clima actual para las Américas del Este.',
        'desc_timeofday': 'Devuelve la hora actual del día para las Américas del Este.',
        'desc_when': 'Dice cuánto falta para la condición especificada.',
        'desc_measure': 'Responde aleatoriamente con 1 - 14 pulgadas.',
        'desc_secret': 'Envía un mensaje secreto al usuario que invocó el comando.',
        'desc_roulette': 'Juega ruleta rusa en texto.',
        'desc_slots': 'Juega a la máquina tragamonedas con emojis de Discord.',
        'desc_coinflip': 'Juega a lanzar una moneda.',
        'desc_decide': 'Decide aleatoriamente sí o no.',
        'desc_balding': 'Devuelve un porcentaje de calvicie aleatorio.',
    }
}

def t(key, lang='en', **kwargs):
    """Translate a key to the given language."""
    template = LOCALES.get(lang, LOCALES['en']).get(key, key)
    return template.format(**kwargs)
